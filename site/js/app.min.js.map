{"version":3,"file":"app.min.js","sources":["../../js/service_worker.js","../../js/xml.js","../../js/utillites.js","../../js/index.js"],"sourcesContent":["export const service_worker = () => {\n\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.register(\"/worker.js\").then((registration) => {\n      console.log(\"Service worker registration succeeded:\", registration);\n    }).catch((error) => {\n      console.error(`Service worker registration failed: ${error}`);\n    });\n  } else {\n    console.error(\"Service workers are not supported.\");\n  }\n};","export const xml = () => {   \n    let parser = new DOMParser();\n    const xmlFileOne = \"IDW60920.xml\";\n    const xmlFileTwo = \"IDW12300.xml\";\n    let documentXMLone;\n    let documentXMLtwo;\n    let txtArrayOne = [];\n    let txtArrayTwo = [];\n    let txtArrayThree = [];\n    let dateArray = [];\n\n    function runXHR() {\n        const xhr = new XMLHttpRequest();\n        xhr.open(\"GET\", xmlFileOne, true);\n        xhr.send();\n        xhr.addEventListener(\"load\", () => {\n            const xhr_nest = new XMLHttpRequest();\n            xhr_nest.addEventListener(\"load\", () => {\n                documentXMLtwo = parser.parseFromString(xhr_nest.response, \"text/xml\");\n                xml();\n            });\n            xhr_nest.open(\"GET\", xmlFileTwo, true);\n            xhr_nest.send();\n            documentXMLone = parser.parseFromString(xhr.response, \"text/xml\");\n        });\n    }\n\n    function xmlDocTwo(param) {\n        for (let index = 0; index <= 6; index++) {\n            let txtOne = \"\";\n            let txtTwo = \"\";\n            let date;\n            for (const obj of param) {\n                if (obj.querySelectorAll(\"forecast-period\")[index]) {\n                    const forecast_period = obj.querySelectorAll(\"forecast-period\")[index];\n                    if (obj.getAttribute(\"aac\") === \"WA_ME001\") {\n                        const text = forecast_period.querySelectorAll(\"text\");\n                        date = new Date(forecast_period.getAttribute(\"start-time-local\"));\n                        date = date.toLocaleDateString();\n                        for (const obj of text) {\n                            if (obj.getAttribute(\"type\") === \"forecast\") {\n                                txtOne += obj.childNodes[0].nodeValue;\n                            }\n                        }\n                    }\n                    if (obj.getAttribute(\"aac\") === \"WA_PT053\") {\n                        const element = forecast_period.querySelectorAll(\"element\");\n                        const text = forecast_period.querySelectorAll(\"text\");\n                        for (const obj of element) {\n                            if (obj.getAttribute(\"type\") === \"air_temperature_minimum\") {\n                              txtTwo += `<br>Minimum&nbsp;${  obj.childNodes[0].nodeValue  }&nbsp;°C`;\n                            }\n                            if (obj.getAttribute(\"type\") === \"air_temperature_maximum\") {\n                               txtTwo += `<br>Maximum&nbsp;${  obj.childNodes[0].nodeValue  }&nbsp;°C`;\n                            }\n                            if (obj.getAttribute(\"type\") === \"forecast_icon_code\") {\n                               document.querySelectorAll(\".x\")[index].src = `./images/${  obj.childNodes[0].nodeValue  }.png`;\n                            }\n                        }\n                        for (const obj of text) {\n                            if (obj.getAttribute(\"type\") === \"precis\") {\n                              document.querySelectorAll(\".x\")[index].alt = obj.childNodes[0].nodeValue;\n                            }\n                        }\n                    }\n                }\n            }\n            txtArrayOne.push(txtOne);\n            txtArrayTwo.push(txtTwo);\n            dateArray.push(date);\n        }\n    }\n\n    function xmlDocOne(param) {\n        for (let index = 0; index <= 6; index++) {\n            let txtThree = \"\";\n            for (const obj of param) {\n                if (obj.getAttribute(\"stn-name\") === \"PERTH METRO\" && obj.querySelectorAll(\"period\")[0].querySelectorAll(\"level\")[0].querySelectorAll(\"element\")) {\n                    const element = obj.querySelectorAll(\"period\")[0].querySelectorAll(\"level\")[0].querySelectorAll(\"element\");\n                    for (const obj of element ) {\n                        if (obj.getAttribute(\"type\") === \"air_temperature\") {\n                            txtThree += `<br>Current&nbsp;${   obj.childNodes[0].nodeValue  }&nbsp;°C`;\n                        }\n                        if (obj.getAttribute(\"type\") === \"maximum_air_temperature\") {\n                            txtThree += `<br>Currrent Maximum&nbsp;${   obj.childNodes[0].nodeValue  }&nbsp;°C`;\n                        }\n                        if (obj.getAttribute(\"type\") === \"minimum_air_temperature\") {\n                            txtThree += `<br>Current Minimum&nbsp;${   obj.childNodes[0].nodeValue  }&nbsp;°C`;\n                        }\n                    }\n                }\n            }\n            txtArrayThree.push(txtThree);\n        }\n    }\n\n    function xml() {\n        xmlDocOne(documentXMLone.querySelectorAll(\"product\")[0].querySelectorAll(\"observations\")[0].querySelectorAll(\"station\"));\n        xmlDocTwo(documentXMLtwo.querySelectorAll(\"product\")[0].querySelectorAll(\"forecast\")[0].querySelectorAll(\"area\"));\n\n        for (let index = 0; index <= 6; index++) {\n            if (index < 1) {\n                document.querySelectorAll(\".f\")[index].innerHTML = dateArray[index];\n                document.querySelectorAll(\".z\")[index].innerHTML = txtArrayOne[index] + txtArrayTwo[index] + txtArrayThree[index];\n            } else if (index >= 1) {\n                document.querySelectorAll(\".f\")[index].innerHTML = dateArray[index];\n                document.querySelectorAll(\".z\")[index].innerHTML = txtArrayOne[index] + txtArrayTwo[index];\n            }\n        }\n    }\n\n    runXHR();\n};\n","export const events = (obj, type, callback, opt) => {\n  if (obj) {\n    obj.addEventListener(type, callback, opt);\n  }\n};\n\nexport const get_position = (element) => {\n  let y_position = 0;\n  while (element) {\n    y_position += element.offsetTop - element.scrollTop;\n    element = element.offsetParent;\n  }\n  return y_position;\n};\n\nexport const preload_image = (url) => {\n  var img = new Image();\n  img.src = url;\n};","import { service_worker } from \"./service_worker.js\";\nimport { events } from \"./utillites.js\";\nimport {  xml } from \"./xml.js\";\n\nevents(window, \"load\", () =>{\n  \n  service_worker(); \n  xml();\n});"],"names":["xml","parser","DOMParser","documentXMLone","documentXMLtwo","txtArrayOne","txtArrayTwo","txtArrayThree","dateArray","xhr","XMLHttpRequest","open","send","addEventListener","xhr_nest","parseFromString","response","param","index","txtThree","obj","getAttribute","querySelectorAll","element","childNodes","nodeValue","push","xmlDocOne","date","txtOne","txtTwo","forecast_period","text","Date","toLocaleDateString","document","src","alt","xmlDocTwo","innerHTML","runXHR","events","type","callback","opt","window","navigator","serviceWorker","register","then","registration","console","log","catch","error"],"mappings":"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"}